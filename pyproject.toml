[tool.poetry]
name = "crypto-labs"
version = "0.1.0"
description = "Cryptography examples for personal exploration"
authors = ["Gerasimos Tzakis <gertzakis@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cryptography = "^44.0.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.4"
invoke = "^2.2.0"
toml = "^0.10.2"
flake8 = "^7.1.1"
yamllint = "^1.35.1"
bandit = "^1.7.10"
pylint = "^3.3.2"

[tool.pylint.master]
ignore = ".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx = "^(_|test_|Meta$)"

[tool.pylint.messages_control]
disable = """,
    line-too-long
"""

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "D", # pydocstyle
]
ignore = [
    # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D203", # 1 blank line required before class docstring

    # D212 is enabled by default in google convention, and complains if we have a docstring like:
    # """
    # My docstring is on the line after the opening quotes instead of on the same line as them.
    # """
    # We've discussed and concluded that we consider this to be a valid style choice.
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line

    # Produces a lot of issues in the current codebase.
    "D401", # First line of docstring should be in imperative mood
    "D407", # Missing dashed underline after section
    "D416", # Section name ends in colon
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"nautobot_dns_models/migrations/*" = [
    "D", # pydocstyle
]
"nautobot_dns_models/tests/*" = [
    "D", # pydocstyle
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
